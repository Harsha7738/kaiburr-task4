name: Task4 - CI / Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-backend:
    name: Build Backend (Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build backend
        run: |
          cd backend
          mvn -B -DskipTests=false package

      - name: Upload backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar

  build-frontend:
    name: Build Frontend (Vite)
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & build frontend
        run: |
          cd frontend
                  npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  docker-build:
    name: Docker Build (Backend Image)
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend docker image
        run: |
          cd backend
          IMAGE_TAG=kaiburr-backend:${GITHUB_SHA::7}
          docker build -t $IMAGE_TAG .
          docker save $IMAGE_TAG -o /tmp/kaiburr-backend.tar

      - name: Upload backend Docker image
        uses: actions/upload-artifact@v4
        with:
          name: backend-docker-image
          path: /tmp/kaiburr-backend.tar
name: Task4 - CI / Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-backend:
    name: Build Backend (Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build backend with Maven
        working-directory: ./backend
        run: mvn -B -DskipTests=false package

      - name: Upload backend jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: ./backend/target/*.jar

  build-frontend:
    name: Build Frontend (Node)
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & build frontend
        working-directory: ./frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./frontend/build

  docker-build:
    name: Docker Build (image saved as tar)
    runs-on: ubuntu-latest
    needs: [ build-backend, build-frontend ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
name: Task4 - CI / Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-backend:
    name: Build Backend (Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build backend
        run: |
          cd backend
          mvn -B -DskipTests=false package

      - name: Upload backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar

  build-frontend:
    name: Build Frontend (Vite)
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & build frontend
        run: |
          cd frontend
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  docker-build:
    name: Docker Build (Backend Image)
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend docker image
        run: |
          cd backend
          IMAGE_TAG=kaiburr-backend:${GITHUB_SHA::7}
          docker build -t $IMAGE_TAG .
          docker save $IMAGE_TAG -o /tmp/kaiburr-backend.tar

      - name: Upload backend Docker image
        uses: actions/upload-artifact@v4
        with:
          name: backend-docker-image
          path: /tmp/kaiburr-backend.tar

